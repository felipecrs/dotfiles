#!/bin/bash

set -euo pipefail

echo "Installing apt packages"

readarray -t apt_packages <<'EOF'
zsh
direnv
{{ if not .is_devcontainer -}}
apt-transport-https
ca-certificates
gnupg
lsb-release
build-essential
curl
wget
tree
parallel
file
procps
zip
git
jq
crudini
docker-ce
docker-ce-cli
containerd.io
skopeo
asciinema
{{   if .is_gnome -}}
yaru-theme-gtk
yaru-theme-icon
yaru-theme-sound
gnome-tweaks
{{     if not .is_wsl -}}
yaru-theme-gnome-shell
libsecret-1-0
gnome-menus
{{     end -}}
{{   end -}}
{{   if not .is_wsl -}}
{{     if eq .chezmoi.osRelease.versionID "18.04" -}}
linux-generic-hwe-18.04
{{     else if eq .chezmoi.osRelease.versionID "20.04" -}}
linux-generic-hwe-20.04
{{     end -}}
{{   end -}}
{{ end -}}
EOF

# Only install if not already installed to save some time
echo "Installing packages"
sudo apt update

sudo apt install -y "${apt_packages[@]}"

{{ if not .is_devcontainer -}}
echo "Configuring Docker"
sudo usermod -aG docker "{{ .chezmoi.username }}"

{{ if .is_wsl -}}
echo "Setting up docker service in WSL initalization"
sudo crudini --set /etc/wsl.conf boot command '"service docker start"'
{{- end }}

{{ if not .is_wsl | and .is_gnome | and (not (lookPath "git-credential-manager-core")) -}}
echo "Installing Git Credential Manager Core"
# Using this method while https://github.com/microsoft/Git-Credential-Manager-Core/issues/422 does not get solved
curl -fsSL 'https://glare.now.sh/microsoft/Git-Credential-Manager-Core/^.*.deb$' --output /tmp/gcmcore.deb
sudo apt install -y /tmp/gcmcore.deb
rm -f /tmp/gcmcore.deb
{{ end -}}

{{ if not .is_wsl | and .is_gnome | and (not (lookPath "google-chrome")) -}}
echo "Installing Google Chrome"
curl -fsSL 'https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb' --output /tmp/google-chrome.deb
sudo apt install -y /tmp/google-chrome.deb
rm -f /tmp/google-chrome.deb
{{ end -}}

{{/* checks if code shim is not the only vscode installed, or if it is running in a remote session */}}
{{ if not .is_wsl | and .is_gnome | and (not (output "bash" "-c" "which -a code | grep -v ~/.local/bin/code | grep -v ~/.vscode-server/ || true")) -}}
echo "Installing VS Code"
curl -fsSL 'https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64' --output /tmp/code.deb
sudo apt install -y /tmp/code.deb
rm -f /tmp/code.deb
{{ end -}}

{{ end -}}
