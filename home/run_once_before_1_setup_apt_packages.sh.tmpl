#!/bin/bash

set -euxo pipefail

echo "Installing apt packages"

{{ if not .is_devcontainer -}}
{{ if lookPath "add-apt-repository" | not -}}
echo "Installing pre-requisites"
sudo apt update
sudo apt install -y software-properties-common apt-transport-https ca-certificates curl gnupg lsb-release
echo "Setting up repositories"
# Latest git
sudo add-apt-repository --no-update -y ppa:git-core/ppa
# Docker
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor --output /usr/share/keyrings/docker-archive-keyring.gpg
echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu {{ .chezmoi.osRelease.ubuntuCodename }} stable" | sudo tee /etc/apt/sources.list.d/docker.list
# Kubic (skopeo, podman, buildah)
echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_{{ .chezmoi.osRelease.versionID }}/ /" | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
curl -fsSL https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_{{ .chezmoi.osRelease.versionID }}/Release.key | sudo apt-key add -
{{ if eq .chezmoi.osRelease.versionID "18.04" -}}
sudo add-apt-repository --no-update -y ppa:communitheme/ppa
{{ end -}}
{{ end -}}

readarray -t apt_packages <<'EOF'
zsh
{{ if not .is_devcontainer -}}
build-essential
curl
wget
tree
parallel
file
procps
zip
unzip
git
jq
crudini
docker-ce
docker-ce-cli
containerd.io
skopeo
asciinema
{{ if .is_gnome -}}
yaru-theme-gtk
yaru-theme-icon
yaru-theme-sound
gnome-tweaks
{{ if not .is_wsl -}}
yaru-theme-gnome-shell
libsecret-1-0
gnome-menus
{{ end -}}
{{ end -}}
{{ end -}}
EOF

# Only install if not already installed to save some time
echo "Installing packages"
sudo apt update

sudo apt install -y "${apt_packages[@]}"

{{ if not .is_devcontainer -}}
echo "Configuring Docker"
sudo usermod -aG docker "{{ .chezmoi.username }}"
if [[ ! -f /etc/docker/daemon.json ]]; then
  sudo mkdir -p /etc/docker
  echo '{}' | sudo tee /etc/docker/daemon.json >/dev/null
fi
jq --raw-output '.features.buildkit = true' /etc/docker/daemon.json | tee /tmp/daemon.json >/dev/null && sudo mv -f /tmp/daemon.json /etc/docker/daemon.json

echo "Installing compose-switch (docker-compose v1 compatibility)"
{{   $composeSwitchVersion := output "curl" "-fsSL" "-o" "/dev/null" "-w" "%{url_effective}" "https://github.com/docker/compose-switch/releases/latest" | trim | base -}}
sudo curl -fsSL "https://github.com/docker/compose-switch/releases/download/{{ $composeSwitchVersion }}/docker-compose-linux-amd64" --output /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose

{{ if .is_wsl -}}
echo "Setting up docker service in WSL initalization"
sudo crudini --set /etc/wsl.conf boot command '"service docker start"'
{{   $dockerCredsVersion := output "curl" "-fsSL" "-o" "/dev/null" "-w" "%{url_effective}" "https://github.com/docker/docker-credential-helpers/releases/latest" | trim | base -}}
echo "Installing docker credential helper for WSL"
curl -fsSL "https://github.com/docker/docker-credential-helpers/releases/download/{{ $dockerCredsVersion }}/docker-credential-wincred-{{ $dockerCredsVersion }}-amd64.zip" | zcat | sudo tee /usr/bin/docker-credential-wincred.exe >/dev/null
sudo chmod +x /usr/bin/docker-credential-wincred.exe
{{ else if .is_gnome -}}
{{   $dockerCredsVersion := output "curl" "-fsSL" "-o" "/dev/null" "-w" "%{url_effective}" "https://github.com/docker/docker-credential-helpers/releases/latest" | trim | base -}}
echo "Installing docker credential helper for GNOME"
curl -fsSL "https://github.com/docker/docker-credential-helpers/releases/download/{{ $dockerCredsVersion }}/docker-credential-secretservice-{{ $dockerCredsVersion }}-amd64.tar.gz" | tar -xzf - -O | sudo tee /usr/bin/docker-credential-secretservice >/dev/null
sudo chmod +x /usr/bin/docker-credential-secretservice
{{- end }}

{{ if not .is_wsl | and .is_gnome | and (not (lookPath "git-credential-manager-core")) -}}
echo "Installing Git Credential Manager Core"
# Using this method while https://github.com/microsoft/Git-Credential-Manager-Core/issues/422 does not get solved
curl -fsSL 'https://glare.now.sh/microsoft/Git-Credential-Manager-Core/^.*.deb$' --output /tmp/gcmcore.deb
sudo apt install -y /tmp/gcmcore.deb
rm -f /tmp/gcmcore.deb
{{ end -}}

{{ if not .is_wsl | and .is_gnome | and (not (lookPath "google-chrome")) -}}
echo "Installing Google Chrome"
curl -fsSL 'https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb' --output /tmp/google-chrome.deb
sudo apt install -y /tmp/google-chrome.deb
rm -f /tmp/google-chrome.deb
{{ end -}}

{{ if not .is_wsl | and .is_gnome | and (not (lookPath "code")) -}}
echo "Installing VS Code"
curl -fsSL 'https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64' --output /tmp/code.deb
sudo apt install -y /tmp/code.deb
rm -f /tmp/code.deb
{{ end -}}

{{ end -}}
