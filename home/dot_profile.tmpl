#!/bin/sh

# if not coming from .bashrc and running in bash and .bashrc exists
if [ -z "$COMING_FROM_BASHRC" ] && [ -n "$BASH_VERSION" ] && [ -f "$HOME/.bashrc" ]; then
  export COMING_FROM_PROFILE="true"
  # shellcheck source=./dot_bashrc
  . "$HOME/.bashrc"
  unset COMING_FROM_PROFILE
fi

if [ -x /home/linuxbrew/.linuxbrew/bin/brew ]; then
  eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
elif [ -x "$HOME/.linuxbrew/bin/brew" ]; then
  eval "$("$HOME/.linuxbrew/bin/brew" shellenv)"
fi

# shellcheck disable=SC2031
NVM_DIR="$([ -n "$XDG_CONFIG_HOME" ] && echo "$XDG_CONFIG_HOME/nvm" || echo "$HOME/.nvm")"
if [ -f "$NVM_DIR/nvm.sh" ]; then
  # shellcheck disable=SC1091
  . "$NVM_DIR/nvm.sh"
  export NVM_DIR
else
  unset NVM_DIR
fi

if [ -d "$HOME/.volta/bin" ]; then
  export VOLTA_HOME="$HOME/.volta"
  export PATH="$VOLTA_HOME/bin:$PATH"
fi

if [ -d "$HOME/.deno/bin" ]; then
  export DENO_INSTALL="$HOME/.deno"
  export PATH="$DENO_INSTALL/bin:$PATH"
fi

if [ -f "$HOME/.sdkman/bin/sdkman-init.sh" ]; then
  export SDKMAN_DIR="$HOME/.sdkman"
  # shellcheck disable=SC1091
  . "$HOME/.sdkman/bin/sdkman-init.sh"
fi

if [ -d "$HOME/.local/share/flutter/bin" ]; then
  export PATH="$HOME/.local/share/flutter/bin:$PATH"
fi

if [ -d "$HOME/bin" ]; then
  export PATH="$HOME/bin:$PATH"
fi

if [ -d "$HOME/.local/bin" ]; then
  export PATH="$HOME/.local/bin:$PATH"
fi

if [ -n "$WSL_DISTRO_NAME" ] || [ -n "$IS_WSL" ]; then
  if [ "$(command -v wslview)" ]; then
    export BROWSER="wslview"
  fi
  if [ "$(command -v wslpath)" ] && [ "$(command -v wslvar)" ]; then
    WIN_HOME=$(wslpath "$(wslvar USERPROFILE)")
    export WIN_HOME
  fi
fi

export VISUAL="{{ .editor }}"
export EDITOR="{{ .editor }}"

export REPOS_HOME="$HOME/repos"
