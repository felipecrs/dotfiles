#!/bin/bash

# {{ template "scripts-library" }}
# {{ template "homebrew-library" }}
# {{ template "volta-library" }}
# {{ template "sdkman-library" }}

# The following line is for ShellCheck to correctly identify the above include
true || source ../../.chezmoitemplates/scripts-library
true || source ../../.chezmoitemplates/homebrew-library
true || source ../../.chezmoitemplates/volta-library
true || source ../../.chezmoitemplates/sdkman-library

if [[ "${CONTINUE_FROM_DOTFILES:-false}" == false ]]; then
  if brew --version &>/dev/null; then
    (
      export HOMEBREW_NO_AUTO_UPDATE=1
      export HOMEBREW_NO_UPDATE_REPORT_NEW=1
      export HOMEBREW_NO_ENV_HINTS=1

      log_task "Updating brew"
      c brew update

      log_task "Updating brew packages"
      c brew upgrade
    )
  fi

  if chezmoi --version &>/dev/null; then
    log_task "Updating dotfiles"
    # Pull latest changes from dotfiles repo
    c chezmoi update --apply=false
    # Apply changes to chezmoi config
    c chezmoi init --force
    # Apply the rest
    c chezmoi apply --force
  fi

  CONTINUE_FROM_DOTFILES=true exec "$0" "$@"
fi

if apt --version &>/dev/null; then
  log_task "Updating apt packages"
  c sudo DEBIAN_FRONTEND=noninteractive apt update --yes
  c sudo DEBIAN_FRONTEND=noninteractive apt upgrade --yes
  c sudo DEBIAN_FRONTEND=noninteractive apt autoremove --yes
fi

if timeout 2 snap warnings &>/dev/null; then
  log_task "Updating snap packages"
  c sudo snap refresh
fi

if flatpak --version &>/dev/null; then
  log_task "Updating flatpak packages"
  c sudo flatpak update --assumeyes
fi

if command -v gnome-shell-extension-installer >/dev/null; then
  log_task "Updating gnome extensions"
  c gnome-shell-extension-installer --update --yes
fi

if pipx --version >/dev/null; then
  log_task "Updating pipx packages"
  c pipx upgrade-all
fi

if volta --version &>/dev/null; then
  log_task "Updating node, npm and yarn with volta"
  c volta install node npm yarn
fi

if npm --version &>/dev/null; then
  log_task "Updating npm packages"
  c npm update --global
fi

if sdk version &>/dev/null; then
  log_task "Updating sdk"
  c sdk selfupdate

  log_task "Updating sdk packages"
  c sdk update
fi

if command -v wsl.exe >/dev/null; then
  log_task "Updating VS Code"
  # WinGet returns non zero code if no upgrade is found, so for now we simply ignore it.
  c winget.exe upgrade --exact --id Microsoft.VisualStudioCode --source winget \
    --accept-source-agreements --disable-interactivity || true

  log_task "Updating Windows Terminal"
  c winget.exe upgrade --exact --id Microsoft.WindowsTerminal --source winget \
    --accept-source-agreements --disable-interactivity || true

  log_task "Updating WSL"
  log_manual_action "If an update is found, WSL will exit and you will need to open another terminal window"
  c wsl.exe --update
fi
