#!/bin/bash

echo_blue() {
  printf "\033[0;34m%s\033[0m" "$*" >&2
}

echo_green_nl() {
  printf "\033[0;32m%s\033[0m\n" "$*" >&2
}

echo_red_nl() {
  printf "\033[0;31m%s\033[0m\n" "$*" >&2
}

get_in_path_except() {
  local -r command="$1"
  local -r except="$2"

  which -a "$command" | grep -A1 "$except" | grep -v "$except" | grep .
}

is_docker_from_desktop() {
  local -r path="$1"

  [[ "$path" == "/mnt/c/Program Files/Docker/Docker/resources/bin/docker" ]]
}

set -euo pipefail

readonly current_bin="$0"
docker="$(get_in_path_except docker "$current_bin")"

if is_docker_from_desktop "$docker"; then
  echo_blue "Starting Docker Desktop..."

  # Using `PowerShell.exe` because of https://github.com/microsoft/WSL/issues/3769
  PowerShell.exe -Command 'Start "C:\Program Files\Docker\Docker\Docker Desktop.exe"'

  readonly seconds=45
  for ((i = 0; i < seconds; i++)); do
    sleep 1

    docker="$(get_in_path_except docker "$current_bin")"

    if "$docker" version &>/dev/null; then
      exit_code=0
      break
    else
      exit_code=$?
    fi
  done

  if ((exit_code == 0)); then
    echo_green_nl " started successfully."
  else
    echo_red_nl " not able to start in $seconds seconds."
    exit $exit_code
  fi
fi

exec "$docker" "$@"
