[user]
name = {{ .name }}
email = {{ .email }}

[core]
editor = {{ .editor }}

[difftool "vscode"]
cmd = code --wait --diff $LOCAL $REMOTE

[mergetool "vscode"]
cmd = code --wait $MERGED

[diff]
tool = vscode

[merge]
autoStash = true
tool = vscode

[rebase]
autoStash = true

[push]
autoSetupRemote = true

[init]
defaultBranch = master

[gitreview]
remote = origin

[include]
path = ~/.config/gitalias/gitalias.txt

[alias]
caa = commit --amend --all
caane = commit --amend --all --no-edit
cob = checkout -b
apply-gitignore = "!f() { set -ex; git rm -r --cached . >/dev/null; git add .; }; f"
remote-for-branch = "!f() { set -ex; branch="${1:-"$(git current-branch)"}"; git rev-parse --abbrev-ref --symbolic-full-name "${branch}@{upstream}" | sed -n 's,^\\(\\S*\\)/'"${branch}"'$,\\1,p'; }; f"
rr = "!f() { set -ex; branch="${1:-"$(git current-branch)"}"; remote="$(git remote-for-branch "${branch}")"; git reset --hard "${remote}/${branch}"; }; f"
pfor = "!f() { set -ex; branch="${1:-"$(git current-branch)"}"; remote="$(git remote-for-branch "${branch}")"; git push "${remote}" "HEAD:refs/for/${branch}"; }; f"
psfor = "!f() { set -ex; git caane; git pfor "$@"; }; f"
pdraft = "!f() { set -ex; branch="${1:-"$(git current-branch)"}"; remote="$(git remote-for-branch "${branch}")"; git push "${remote}" "HEAD:refs/drafts/${branch}"; }; f"
psdraft = "!f() { set -ex; git caane; git pdraft "$@"; }; f"
