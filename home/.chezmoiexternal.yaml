".oh-my-zsh":
  type: archive
  {{ $omzRevision := includeTemplate "get-github-head-revision" "ohmyzsh/ohmyzsh" }}
  url: "https://github.com/ohmyzsh/ohmyzsh/archive/{{ $omzRevision }}.tar.gz"
  stripComponents: 1
  # waiting for https://github.com/twpayne/chezmoi/issues/1614#issuecomment-966524408
  # exact: true

".oh-my-zsh/custom/themes/powerlevel10k":
  type: archive
  {{ $p10kRevision := includeTemplate "get-github-head-revision" "romkatv/powerlevel10k" }}
  url: "https://github.com/romkatv/powerlevel10k/archive/{{ $p10kRevision }}.tar.gz"
  stripComponents: 1
  exact: true

".oh-my-zsh/custom/plugins/zsh-syntax-highlighting":
  type: archive
  {{ $zshSyntaxHighlightingRevision := includeTemplate "get-github-head-revision" "zsh-users/zsh-syntax-highlighting" }}
  url: "https://github.com/zsh-users/zsh-syntax-highlighting/archive/{{ $zshSyntaxHighlightingRevision }}.tar.gz"
  stripComponents: 1
  exact: true

".oh-my-zsh/custom/plugins/zsh-autosuggestions":
  type: archive
  {{ $zshAutoSuggestionsRevision := includeTemplate "get-github-head-revision" "zsh-users/zsh-autosuggestions" }}
  url: "https://github.com/zsh-users/zsh-autosuggestions/archive/{{ $zshAutoSuggestionsRevision }}.tar.gz"
  stripComponents: 1
  exact: true

".oh-my-zsh/custom/plugins/zsh-completions":
  type: archive
  {{ $zshCompletionsRevision := includeTemplate "get-github-head-revision" "zsh-users/zsh-completions" }}
  url: "https://github.com/zsh-users/zsh-completions/archive/{{ $zshCompletionsRevision }}.tar.gz"
  stripComponents: 1
  exact: true

".config/gitalias/gitalias.txt":
  type: file
  {{ $gitaliasRevision := includeTemplate "get-github-head-revision" "GitAlias/gitalias" }}
  url: "https://github.com/GitAlias/gitalias/raw/{{ $gitaliasRevision }}/gitalias.txt"

{{ if not .is_devcontainer | or (.is_devcontainer | and (not (lookPath "retry"))) -}}
".local/bin/retry":
  type: file
  {{ $retryVersion := includeTemplate "get-github-latest-version" "kadwanev/retry" }}
  url: "https://github.com/kadwanev/retry/raw/{{ $retryVersion }}/retry"
  executable: true
{{- end }}

{{ if not .is_devcontainer | or (.is_devcontainer | and (not (lookPath "direnv"))) -}}
".local/bin/direnv":
  type: file
  {{ $direnvVersion := includeTemplate "get-github-latest-version" "direnv/direnv" }}
  url: "https://github.com/direnv/direnv/releases/download/v{{ $direnvVersion }}/direnv.linux-{{ .chezmoi.arch }}"
  executable: true
{{- end }}

{{ if not .is_devcontainer | or (.is_devcontainer | and (not (lookPath "pkgx")) | and (ne .chezmoi.osRelease.id "alpine")) -}}
# Using my fork until https://github.com/pkgxdev/pkgx/pull/1187 is merged and released
".local/bin/pkgx":
  type: file
  {{ $pkgxVersion := includeTemplate "get-github-latest-version" "felipecrs/pkgx" }}
  url: "https://github.com/felipecrs/pkgx/releases/download/v{{ $pkgxVersion }}/pkgx-linux-{{ .chezmoi.arch }}"
  executable: true
{{- end }}

{{ if not .is_devcontainer -}}
".local/bin/uv":
  type: archive-file
  {{ $uvVersion := includeTemplate "get-github-latest-version" "astral-sh/uv" }}
  url: "https://github.com/astral-sh/uv/releases/download/{{ $uvVersion }}/uv-{{ .uname_arch }}-unknown-linux-gnu.tar.gz"
  stripComponents: 1
  path: uv

".local/bin/uvx":
  type: archive-file
  url: "https://github.com/astral-sh/uv/releases/download/{{ $uvVersion }}/uv-{{ .uname_arch }}-unknown-linux-gnu.tar.gz"
  stripComponents: 1
  path: uvx

".local/bin/kubecolor":
  type: archive-file
  {{ $kubecolorVersion := includeTemplate "get-github-latest-version" "kubecolor/kubecolor" }}
  url: "https://github.com/kubecolor/kubecolor/releases/download/v{{ $kubecolorVersion }}/kubecolor_{{ $kubecolorVersion }}_linux_{{ .chezmoi.arch }}.tar.gz"
  path: kubecolor

".local/bin/kubectx":
  type: archive-file
  {{ $kubectxVersion := includeTemplate "get-github-latest-version" "ahmetb/kubectx" }}
  url: "https://github.com/ahmetb/kubectx/releases/download/v{{ $kubectxVersion }}/kubectx_v{{ $kubectxVersion }}_linux_{{ .uname_arch }}.tar.gz"
  path: kubectx

".oh-my-zsh/custom/plugins/my-completions/_kubectx.zsh":
  type: file
  url: "https://github.com/ahmetb/kubectx/raw/v{{ $kubectxVersion }}/completion/_kubectx.zsh"

".local/bin/kubens":
  type: archive-file
  url: "https://github.com/ahmetb/kubectx/releases/download/v{{ $kubectxVersion }}/kubens_v{{ $kubectxVersion }}_linux_{{ .uname_arch }}.tar.gz"
  path: kubens

".oh-my-zsh/custom/plugins/my-completions/_kubens.zsh":
  type: file
  url: "https://github.com/ahmetb/kubectx/raw/v{{ $kubectxVersion }}/completion/_kubens.zsh"

# Required by kubectx and kubens
".local/bin/fzf":
  type: archive-file
  {{ $fzfVersion := includeTemplate "get-github-latest-version" "junegunn/fzf" }}
  url: "https://github.com/junegunn/fzf/releases/download/v{{ $fzfVersion }}/fzf-{{ $fzfVersion }}-linux_{{ .chezmoi.arch }}.tar.gz"
  path: fzf

".local/bin/stern":
  type: archive-file
  {{ $sternVersion := includeTemplate "get-github-latest-version" "stern/stern" }}
  url: "https://github.com/stern/stern/releases/download/v{{ $sternVersion }}/stern_{{ $sternVersion }}_linux_{{ .chezmoi.arch }}.tar.gz"
  path: stern

".volta/bin":
  type: archive
  {{ $voltaVersion := includeTemplate "get-github-latest-version" "volta-cli/volta" }}
  url: "https://github.com/volta-cli/volta/releases/download/v{{ $voltaVersion }}/volta-{{ $voltaVersion }}-linux.tar.gz"

{{   if .is_gnome -}}
".local/share/nautilus-python/extensions/code-nautilus.py":
  type: file
  {{ $codeNautilusRevision := includeTemplate "get-github-head-revision" "harry-cpp/code-nautilus" }}
  url: "https://raw.githubusercontent.com/harry-cpp/code-nautilus/{{ $codeNautilusRevision }}/code-nautilus.py"
{{-  end }}

".local/bin/skopeo":
  type: file
  {{ $skopeoVersion := includeTemplate "get-github-latest-version" "felipecrs/skopeo-bin" }}
  url: "https://github.com/felipecrs/skopeo-bin/releases/download/v{{ $skopeoVersion }}/skopeo.linux-{{ .chezmoi.arch }}"
  executable: true

".deno/bin/deno":
  type: archive-file
  {{ $denoVersion := includeTemplate "get-github-latest-version" "denoland/deno" }}
  url: "https://github.com/denoland/deno/releases/download/v{{ $denoVersion }}/deno-{{ .uname_arch }}-unknown-linux-gnu.zip"
  path: deno

"{{ joinPath .fontsDir .terminalFont.fileName }}":
  type: file
  {{ $nerdFontsVersion := includeTemplate "get-github-latest-version" "ryanoasis/nerd-fonts" }}
  url: "https://raw.githubusercontent.com/ryanoasis/nerd-fonts/v{{ $nerdFontsVersion }}/patched-fonts/FiraCode/Regular/FiraCodeNerdFontMono-Regular.ttf"

{{    if .is_wsl -}}
{{    $externalScriptsDir := includeTemplate "get-external-scripts-dir" . }}
"{{ $externalScriptsDir }}/Install-Font.ps1":
  type: file
  {{ $psWinGlueRevision := includeTemplate "get-github-head-revision" "ralish/PSWinGlue" }}
  url: "https://raw.githubusercontent.com/ralish/PSWinGlue/{{ $psWinGlueRevision }}/Scripts/Install-Font.ps1"

"{{ $externalScriptsDir }}/Uninstall-Font.ps1":
  type: file
  url: "https://raw.githubusercontent.com/ralish/PSWinGlue/{{ $psWinGlueRevision }}/Scripts/Uninstall-Font.ps1"
{{-   end }}

{{- end -}}
